
version: '3.8'

services:

  db:
    image: postgres:13.0-alpine
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    volumes:
      - volume_db:/var/lib/postgresql/data/
    networks:
      - backend
    ports:
      - $POSTGRES_PORT:$POSTGRES_PORT

  app:
    image: django.app.server.app
    build:
      context: .
      dockerfile: Dockerfile.app
    environment:
      - SECRET_KEY=$SECRET_KEY
      - DEBUG=$DEBUG
      - ALLOWED_HOSTS=$ALLOWED_HOSTS

      - DJANGO_PORT=$DJANGO_PORT
      - DJANGO_HOST=$DJANGO_HOST
      - DJANGO_SUPERUSER_USER=$DJANGO_SUPERUSER_USER
      - DJANGO_SUPERUSER_EMAIL=$DJANGO_SUPERUSER_EMAIL
      - DJANGO_SUPERUSER_PASSWORD=$DJANGO_SUPERUSER_PASSWORD

      - POSTGRES_HOST=$POSTGRES_HOST
      - POSTGRES_PORT=$POSTGRES_PORT
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB

    command: pipenv run python manage.py runserver $DJANGO_HOST:$DJANGO_PORT
    volumes:
      - volume_app:/var/lib/django/data/
    networks:
      - backend
    ports:
      - $DJANGO_PORT:$DJANGO_PORT
    depends_on:
      - db

volumes:
  volume_db:
  volume_app:

networks:
  backend:
    driver: bridge
